{"version":3,"sources":["clock.jsx","reportWebVitals.js","SimpleCustomers.jsx","index.js"],"names":["Clock","props","state","currentTime","Date","toLocaleString","this","timerId","setInterval","setState","clearInterval","React","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","PersonGet","useState","people","setPeople","useEffect","axios","method","url","response","data","className","map","p","class_name","last_name","id","first_name","three_name","src","avatar","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mNAoBeA,E,kDAjBX,WAAYC,GAAO,IAAD,8BACd,cAAMA,IACDC,MAAQ,CAACC,aAAc,IAAIC,MAAQC,kBAF1B,E,qDAIlB,WAAoB,IAAD,OACfC,KAAKC,QAAQC,aAAY,WACrB,EAAKC,SAAS,CAACN,aAAc,IAAIC,MAAQC,qBAC1C,O,kCAEP,WACIK,cAAcJ,KAAKC,W,oBAEvB,WACI,OACI,8BAAMD,KAAKJ,MAAMC,kB,GAfTQ,IAAMC,WCUXC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,yBC6BCQ,MA7Bf,WACI,MAA4BC,mBAAS,IAArC,mBAAOC,EAAP,KAAeC,EAAf,KAWA,OATAC,qBAAW,WACPC,IAAM,CACFC,OAAQ,MACRC,IAAK,oCACNb,MAAK,SAAAc,GACJL,EAAUK,EAASC,WAExB,IAGC,qBAAKC,UAAU,YAAf,SAESR,EAAOS,KAAI,SAAAC,GAAC,OACT,sBAAKF,UAAU,WAAf,UACI,sBAAKG,WAAW,WAAhB,UACI,kCAAgBD,EAAEE,YAAVF,EAAEG,IACV,4BAAeH,EAAEI,YAATJ,EAAEG,IACV,4BAAeH,EAAEK,YAATL,EAAEG,OAEd,qBAAKL,UAAU,SAASQ,IAAKN,EAAEO,kBCtBvDC,IAASC,OACP,eAAC,IAAMC,WAAP,WAEC,qBAAKZ,UAAU,QAAf,SACE,cAAC,EAAD,MAEF,cAAC,EAAD,OAEDa,SAASC,eAAe,SAM1BjC,M","file":"static/js/main.52e304ae.chunk.js","sourcesContent":["import React from \"react\";\n\nclass Clock extends React.Component {\n    constructor(props){\n        super(props)\n        this.state = {currentTime: (new Date()).toLocaleString()}}\n\n    componentDidMount(){\n        this.timerId=setInterval(() => {\n            this.setState({currentTime: (new Date()).toLocaleString()})\n        }, 1000);}  \n\n    componentWillUnmount(){\n        clearInterval(this.timerId)\n    }\n    render(){\n        return(\n            <div>{this.state.currentTime}</div>)} \n}\n\nexport default Clock;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React, {useState, useEffect } from 'react';\nimport axios from 'axios';\n\n\nlet styles = {\n    width: '10%'\n}\nfunction PersonGet() {\n    const [people, setPeople] = useState([])\n\n    useEffect( ()=> {\n        axios({\n            method: 'GET',\n            url: 'http://127.0.0.1:8000/customers'\n        }).then(response=> {\n            setPeople(response.data)\n        })\n    }, [])\n\n    return (\n        <div className='peopleGet'>\n            \n                {people.map(p => (\n                    <div className='userCard'>\n                        <div class_name='username'>\n                            <p key={p.id}> {p.last_name}</p>\n                            <p key={p.id}>{p.first_name}</p>\n                            <p key={p.id}>{p.three_name}</p>\n                        </div>\n                        <img className='avatar' src={p.avatar}></img>\n                    </div>\n                ))}\n        </div>\n    )\n}\n\nexport default PersonGet;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Clock from './clock';\nimport reportWebVitals from './reportWebVitals';\nimport PersonGet from './SimpleCustomers'\n\nReactDOM.render(\n  <React.StrictMode>\n    \n   <div className='clock'>\n     <Clock/>\n   </div>\n   <PersonGet/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}