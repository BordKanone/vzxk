{"ast":null,"code":"var _jsxFileName = \"/home/bordkanone/vzxk/vzxk_project/vzxk_ui/src/App.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useMemo } from \"react\";\nimport PostList from \"./components/PostList\";\nimport PostForm from \"./components/PostForm\";\nimport FormSelect from \"./components/ui/selected/FormSelect\";\nimport FormInput from \"./components/ui/input/FormInput\";\nimport PostFilter from \"./components/PostFilter\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n\n  let [posts, setPosts] = useState([]);\n  const sortedPostList = useMemo(() => {\n    console.log('use memo');\n\n    if (selectedSort) {\n      return [...posts].sort((a, b) => a[selectedSort].localeCompare(b[selectedSort]));\n    } else {\n      return posts;\n    }\n  }, [selectedSort, posts]);\n  const getSortedandFilteredList = useMemo(() => {\n    return sortedPostList.filter(post => post.title.toLowerCase().includes(searchQuery));\n  }, [searchQuery, sortedPostList]);\n\n  const createPost = newPost => {\n    setPosts([...posts, newPost]);\n  };\n\n  const removePost = post => {\n    setPosts(posts.filter(p => p.id !== post.id));\n  };\n\n  const sortPosts = sort => {\n    setSelectedSort(sort);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(PostFilter, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(PostForm, {\n      create: createPost\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(PostList, {\n      remove: removePost,\n      posts: getSortedandFilteredList,\n      title: \"\\u0421\\u043F\\u0438\\u0441\\u043E\\u043A \\u043F\\u043E\\u0441\\u0442\\u043E\\u0432\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n}\n\n_s(App, \"+fh3oQO/T2mLDhYae1YwQtT/IH4=\");\n\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/bordkanone/vzxk/vzxk_project/vzxk_ui/src/App.jsx"],"names":["React","useState","useMemo","PostList","PostForm","FormSelect","FormInput","PostFilter","App","posts","setPosts","sortedPostList","console","log","selectedSort","sort","a","b","localeCompare","getSortedandFilteredList","filter","post","title","toLowerCase","includes","searchQuery","createPost","newPost","removePost","p","id","sortPosts","setSelectedSort"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,OAAzB,QAAuC,OAAvC;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,OAAOC,UAAP,MAAuB,qCAAvB;AACA,OAAOC,SAAP,MAAsB,iCAAtB;AACA,OAAOC,UAAP,MAAuB,yBAAvB;;AAEA,eAAe,SAASC,GAAT,GAAc;AAAA;;AACzB,MAAI,CAACC,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,CAAC,EAAD,CAAhC;AAGA,QAAMU,cAAc,GAAGT,OAAO,CAAC,MAAI;AAC/BU,IAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ;;AACA,QAAIC,YAAJ,EAAiB;AACb,aAAO,CAAC,GAAGL,KAAJ,EAAWM,IAAX,CAAiB,CAACC,CAAD,EAAGC,CAAH,KAASD,CAAC,CAACF,YAAD,CAAD,CAAgBI,aAAhB,CAA8BD,CAAC,CAACH,YAAD,CAA/B,CAA1B,CAAP;AACH,KAFD,MAGI;AACA,aAAOL,KAAP;AACH;AACJ,GAR6B,EAQ3B,CAACK,YAAD,EAAeL,KAAf,CAR2B,CAA9B;AAUA,QAAMU,wBAAwB,GAAGjB,OAAO,CAAC,MAAI;AACzC,WAAOS,cAAc,CAACS,MAAf,CAAsBC,IAAI,IAAIA,IAAI,CAACC,KAAL,CAAWC,WAAX,GAAyBC,QAAzB,CAAkCC,WAAlC,CAA9B,CAAP;AACH,GAFuC,EAErC,CAACA,WAAD,EAAcd,cAAd,CAFqC,CAAxC;;AAIA,QAAMe,UAAU,GAAIC,OAAD,IAAa;AAC5BjB,IAAAA,QAAQ,CAAC,CAAC,GAAGD,KAAJ,EAAWkB,OAAX,CAAD,CAAR;AACH,GAFD;;AAIA,QAAMC,UAAU,GAAIP,IAAD,IAAS;AACxBX,IAAAA,QAAQ,CAACD,KAAK,CAACW,MAAN,CAAaS,CAAC,IAAGA,CAAC,CAACC,EAAF,KAAST,IAAI,CAACS,EAA/B,CAAD,CAAR;AACH,GAFD;;AAIA,QAAMC,SAAS,GAAIhB,IAAD,IAAQ;AACtBiB,IAAAA,eAAe,CAACjB,IAAD,CAAf;AAEH,GAHD;;AAKA,sBACI;AAAA,4BACI,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,QAAC,QAAD;AAAU,MAAA,MAAM,EAAIW;AAApB;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI,QAAC,QAAD;AAAU,MAAA,MAAM,EAAEE,UAAlB;AAA8B,MAAA,KAAK,EAAET,wBAArC;AAA+D,MAAA,KAAK,EAAC;AAArE;AAAA;AAAA;AAAA;AAAA,YAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAOH;;GAtCuBX,G;;KAAAA,G","sourcesContent":["import React, {useState, useMemo} from \"react\";\nimport PostList from \"./components/PostList\";\nimport PostForm from \"./components/PostForm\";\nimport FormSelect from \"./components/ui/selected/FormSelect\";\nimport FormInput from \"./components/ui/input/FormInput\";\nimport PostFilter from \"./components/PostFilter\";\n\nexport default function App(){\n    let [posts, setPosts] = useState([])\n    \n\n    const sortedPostList = useMemo(()=>{\n        console.log('use memo')\n        if (selectedSort){\n            return [...posts].sort( (a,b) => a[selectedSort].localeCompare(b[selectedSort]) ) \n        }\n        else{\n            return posts;\n        }\n    }, [selectedSort, posts])\n\n    const getSortedandFilteredList = useMemo(()=>{\n        return sortedPostList.filter(post => post.title.toLowerCase().includes(searchQuery))\n    }, [searchQuery, sortedPostList])\n\n    const createPost = (newPost) => {\n        setPosts([...posts, newPost])\n    }\n\n    const removePost = (post) =>{\n        setPosts(posts.filter(p=> p.id !== post.id))\n    }\n    \n    const sortPosts = (sort)=>{\n        setSelectedSort(sort)\n        \n    }\n\n    return(\n        <div>\n            <PostFilter/>\n            <PostForm create = {createPost}/>\n            <PostList remove={removePost} posts={getSortedandFilteredList} title='Список постов'/>\n        </div>\n        )\n} "]},"metadata":{},"sourceType":"module"}