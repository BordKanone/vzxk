{"ast":null,"code":"var _jsxFileName = \"/home/bordkanone/vzxk/vzxk_project/vzxk_ui/src/App.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useMemo } from \"react\";\nimport PostList from \"./components/PostList\";\nimport PostForm from \"./components/PostForm\";\nimport PostFilter from \"./components/PostFilter\";\nimport CreateModal from \"./components/ui/CreateModal\";\nimport FormButton from \"./components/ui/FormButton\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n\n  const [posts, setPosts] = useState([]);\n  const [filter, setFilter] = useState({\n    sort: '',\n    query: ''\n  });\n  const [modal, setModal] = useState(false);\n  const sortedPostList = useMemo(() => {\n    console.log('use memo');\n\n    if (filter.sort) {\n      return [...posts].sort((a, b) => a[filter.sort].localeCompare(b[filter.sort]));\n    } else {\n      return posts;\n    }\n  }, [filter.sort, posts]);\n  const getSortedandFilteredList = useMemo(() => {\n    return sortedPostList.filter(post => post.title.toLowerCase().includes(filter.query));\n  }, [filter.query, sortedPostList]);\n\n  const createPost = newPost => {\n    setPosts([...posts, newPost]);\n  };\n\n  const removePost = post => {\n    setPosts(posts.filter(p => p.id !== post.id));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(PostFilter, {\n      filter: filter,\n      setFilter: setFilter\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(CreateModal, {\n      visible: modal,\n      setVisible: setModal,\n      children: /*#__PURE__*/_jsxDEV(PostForm, {\n        create: createPost\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(FormButton, {\n      onClick: () => setModal(true),\n      children: \"\\u0421\\u043E\\u0437\\u0434\\u0430\\u0442\\u044C \\u043F\\u043E\\u0441\\u0442\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(PostList, {\n      remove: removePost,\n      posts: getSortedandFilteredList,\n      title: \"\\u0421\\u043F\\u0438\\u0441\\u043E\\u043A \\u043F\\u043E\\u0441\\u0442\\u043E\\u0432\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n}\n\n_s(App, \"fKo29z80vBmXH9Hhg8qRj0plmOE=\");\n\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/bordkanone/vzxk/vzxk_project/vzxk_ui/src/App.jsx"],"names":["React","useState","useMemo","PostList","PostForm","PostFilter","CreateModal","FormButton","App","posts","setPosts","filter","setFilter","sort","query","modal","setModal","sortedPostList","console","log","a","b","localeCompare","getSortedandFilteredList","post","title","toLowerCase","includes","createPost","newPost","removePost","p","id"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,OAAzB,QAAuC,OAAvC;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,OAAOC,WAAP,MAAwB,6BAAxB;AACA,OAAOC,UAAP,MAAuB,4BAAvB;;AAEA,eAAe,SAASC,GAAT,GAAc;AAAA;;AACzB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACU,MAAD,EAASC,SAAT,IAAsBX,QAAQ,CAAC;AAACY,IAAAA,IAAI,EAAC,EAAN;AAAUC,IAAAA,KAAK,EAAC;AAAhB,GAAD,CAApC;AACA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBf,QAAQ,CAAC,KAAD,CAAlC;AACA,QAAMgB,cAAc,GAAGf,OAAO,CAAC,MAAI;AAC/BgB,IAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ;;AACA,QAAIR,MAAM,CAACE,IAAX,EAAgB;AACZ,aAAO,CAAC,GAAGJ,KAAJ,EAAWI,IAAX,CAAiB,CAACO,CAAD,EAAGC,CAAH,KAASD,CAAC,CAACT,MAAM,CAACE,IAAR,CAAD,CAAeS,aAAf,CAA6BD,CAAC,CAACV,MAAM,CAACE,IAAR,CAA9B,CAA1B,CAAP;AACH,KAFD,MAGI;AACA,aAAOJ,KAAP;AACH;AACJ,GAR6B,EAQ3B,CAACE,MAAM,CAACE,IAAR,EAAcJ,KAAd,CAR2B,CAA9B;AAUA,QAAMc,wBAAwB,GAAGrB,OAAO,CAAC,MAAI;AACzC,WAAOe,cAAc,CAACN,MAAf,CAAsBa,IAAI,IAAIA,IAAI,CAACC,KAAL,CAAWC,WAAX,GAAyBC,QAAzB,CAAkChB,MAAM,CAACG,KAAzC,CAA9B,CAAP;AACH,GAFuC,EAErC,CAACH,MAAM,CAACG,KAAR,EAAeG,cAAf,CAFqC,CAAxC;;AAIA,QAAMW,UAAU,GAAIC,OAAD,IAAa;AAC5BnB,IAAAA,QAAQ,CAAC,CAAC,GAAGD,KAAJ,EAAWoB,OAAX,CAAD,CAAR;AAEH,GAHD;;AAKA,QAAMC,UAAU,GAAIN,IAAD,IAAS;AACxBd,IAAAA,QAAQ,CAACD,KAAK,CAACE,MAAN,CAAaoB,CAAC,IAAGA,CAAC,CAACC,EAAF,KAASR,IAAI,CAACQ,EAA/B,CAAD,CAAR;AACH,GAFD;;AAIA,sBACI;AAAA,4BAEI,QAAC,UAAD;AAAY,MAAA,MAAM,EAAErB,MAApB;AAA4B,MAAA,SAAS,EAAIC;AAAzC;AAAA;AAAA;AAAA;AAAA,YAFJ,eAII,QAAC,WAAD;AAAa,MAAA,OAAO,EAAEG,KAAtB;AAA6B,MAAA,UAAU,EAAEC,QAAzC;AAAA,6BACI,QAAC,QAAD;AAAU,QAAA,MAAM,EAAIY;AAApB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAJJ,eAOI,QAAC,UAAD;AAAY,MAAA,OAAO,EAAE,MAAIZ,QAAQ,CAAC,IAAD,CAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAPJ,eAUI,QAAC,QAAD;AAAU,MAAA,MAAM,EAAEc,UAAlB;AAA8B,MAAA,KAAK,EAAEP,wBAArC;AAA+D,MAAA,KAAK,EAAC;AAArE;AAAA;AAAA;AAAA;AAAA,YAVJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAcH;;GAzCuBf,G;;KAAAA,G","sourcesContent":["import React, {useState, useMemo} from \"react\";\nimport PostList from \"./components/PostList\";\nimport PostForm from \"./components/PostForm\";\nimport PostFilter from \"./components/PostFilter\";\nimport CreateModal from \"./components/ui/CreateModal\";\nimport FormButton from \"./components/ui/FormButton\";\n\nexport default function App(){\n    const [posts, setPosts] = useState([])\n    const [filter, setFilter] = useState({sort:'', query:''})\n    const [modal, setModal] = useState(false)\n    const sortedPostList = useMemo(()=>{\n        console.log('use memo')\n        if (filter.sort){\n            return [...posts].sort( (a,b) => a[filter.sort].localeCompare(b[filter.sort]) ) \n        }\n        else{\n            return posts;\n        }\n    }, [filter.sort, posts])\n\n    const getSortedandFilteredList = useMemo(()=>{\n        return sortedPostList.filter(post => post.title.toLowerCase().includes(filter.query))\n    }, [filter.query, sortedPostList])\n\n    const createPost = (newPost) => {\n        setPosts([...posts, newPost])\n        \n    }\n\n    const removePost = (post) =>{\n        setPosts(posts.filter(p=> p.id !== post.id))\n    }\n\n    return(\n        <div>\n\n            <PostFilter filter={filter} setFilter = {setFilter}/>\n            \n            <CreateModal visible={modal} setVisible={setModal}>\n                <PostForm create = {createPost}/>\n            </CreateModal>\n            <FormButton onClick={()=>setModal(true)}>\n                Создать пост\n            </FormButton>\n            <PostList remove={removePost} posts={getSortedandFilteredList} title='Список постов'/>\n        </div>\n        )\n} "]},"metadata":{},"sourceType":"module"}